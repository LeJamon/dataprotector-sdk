###################### SDK DRONE CI ######################
kind: pipeline
type: docker
name: sdk-default

trigger:
  event: push

steps:
  - name: only sdk package
    image: bash
    commands:
      - cp -r packages/sdk/. . && rm -rf packages

  - name: install
    image: node:18.19
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:18.19
    commands:
      - npm run check-format

  - name: lint
    image: node:18.19
    commands:
      - npm run lint

  - name: check-types
    image: node:18.19
    commands:
      - npm run check-types

  - name: test
    image: node:18.19
    commands:
      - npm run test

  - name: build
    image: node:18.19
    commands:
      - npm run build

  - name: npm publish dry-run
    image: node:18.19
    commands:
      - npm publish --dry-run

---
kind: pipeline
type: docker
name: publish npm nightly

trigger:
  event:
    - promote
  target:
    - nightly
  branch:
    - develop

steps:
  - name: only sdk package
    image: bash
    commands:
      - cp -r packages/sdk/. . && rm -rf packages

  - name: install
    image: node:18.19
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:18.19
    commands:
      - npm run check-format

  - name: lint
    image: node:18.19
    commands:
      - npm run lint

  - name: check-types
    image: node:18.19
    commands:
      - npm run check-types

  - name: test
    image: node:18.19
    commands:
      - npm run test

  - name: build
    image: node:18.19
    commands:
      - npm run build

  - name: set version nightly
    image: node:18.19
    commands:
      - eval npm pkg set version="$(npm pkg get version)-nightly-$DRONE_COMMIT"

  - name: npm publish
    image: plugins/npm
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token
      tag: nightly
      access: public

---
kind: pipeline
type: docker
name: publish npm latest

trigger:
  event:
    - promote
  target:
    - latest
  branch:
    - main

steps:
  - name: only sdk package
    image: bash
    commands:
      - cp -r packages/sdk/. . && rm -rf packages

  - name: install
    image: node:18.19
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:18.19
    commands:
      - npm run check-format

  - name: lint
    image: node:18.19
    commands:
      - npm run lint

  - name: check-types
    image: node:18.19
    commands:
      - npm run check-types

  - name: test
    image: node:18.19
    commands:
      - npm run test

  - name: build
    image: node:18.19
    commands:
      - npm run build

  - name: npm publish
    image: plugins/npm
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token
      tag: latest
      access: public

---
kind: pipeline
type: docker
name: deprecate-version

trigger:
  event:
    - promote
  target:
    - npm-deprecate-package

steps:
  - name: authenticate
    image: robertstettner/drone-npm-auth
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token

  - name: deprecate package
    image: node:18.19
    params:
      - PACKAGE_VERSION
    commands:
      - if [ -n "$PACKAGE_VERSION" ]; then npm deprecate @iexec/dataprotector@$PACKAGE_VERSION "deprecate $PACKAGE_VERSION"; else echo "PACKAGE_VERSION is not set"; fi
---
kind: pipeline
type: docker
name: undeprecate version

trigger:
  event:
    - promote
  target:
    - npm-undeprecate-package

steps:
  - name: authenticate
    image: robertstettner/drone-npm-auth
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token

  - name: undeprecate package
    image: node:18.19
    params:
      - PACKAGE_VERSION
    commands:
      - if [ -n "$PACKAGE_VERSION" ]; then npm deprecate @iexec/dataprotector@$PACKAGE_VERSION ""; else echo "PACKAGE_VERSION is not set"; fi

###################### SMART CONTRACT DRONE CI ######################
---
kind: pipeline
type: docker
name: smart-contract-default

trigger:
  event: push

steps:
  - name: only smart-contract package
    image: bash
    commands:
      - cp -r packages/smart-contract/. . && rm -rf packages

  - name: install deps
    image: node:18.19
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: check format
    image: node:18.19
    commands:
      - npm run check-format

  - name: check lint
    image: node:18.19
    commands:
      - npm run lint

  - name: compile smart contracts
    image: node:18.19
    commands:
      - npm run compile

  - name: test smart contracts
    image: node:18.19
    commands:
      - npm run test

  - name: dry-deployment smart-contract
    image: node:18.19
    commands:
      - npm run deploy
      - cat .smart-contract-address

---
# deploy smart contract in prod or dev
kind: pipeline
type: docker
name: deploy smart contract

trigger:
  event:
    - promote
  target:
    - smart-contract-dev
    - smart-contract-production
  branch:
    - develop
    - main

steps:
  - name: only smart-contract package
    image: bash
    commands:
      - cp -r packages/smart-contract/. . && rm -rf packages

  - name: install deps
    image: node:18.19
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: check format
    image: node:18.19
    commands:
      - npm run check-format

  - name: check lint
    image: node:18.19
    commands:
      - npm run lint

  - name: compile smart contracts
    image: node:18.19
    commands:
      - npm run compile

  - name: test smart contracts
    image: node:18.19
    commands:
      - npm run test

  - name: smart-contract dev deployment
    image: node:18.19
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-dev-privatekey
    commands:
      - npm run deploy -- --network bellecour
      - cat .smart-contract-address
    when:
      target:
        - smart-contract-dev
      branch:
        - develop

  - name: smart-contract prod deployment
    image: node:18.19
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-prod-privatekey
    commands:
      - npm run deploy -- --network bellecour
      - cat .smart-contract-address
    when:
      target:
        - smart-contract-production
      branch:
        - main

  # TODO: Adapt/delete this verification step according with the new dev environment
  - name: verify dev contract
    image: node:18.19
    commands:
      - npm run verify -- --network bellecour $(cat .smart-contract-address) $(cat .constructor-args-params)
    when:
      target:
        - smart-contract-dev
      branch:
        - develop

  - name: verify prod contract
    image: node:18.19
    commands:
      - npm run verify -- --network bellecour $(cat .smart-contract-address) $(cat .constructor-args-params)
    when:
      target:
        - smart-contract-production
      branch:
        - main

###################### SUBGRAPH DRONE CI ######################
---
kind: pipeline
type: docker
name: subgraph-default

trigger:
  event: push

steps:
  - name: only subgraph package
    image: bash
    commands:
      - cp -r packages/subgraph/. . && rm -rf packages

  - name: build-subgraph
    image: node:18.19
    commands:
      - npm ci
      - npm run codegen
      - npm run build

---
kind: pipeline
type: docker
name: deploy-subgraph-dev

trigger:
  event:
    - promote
  target:
    - subgraph-dev
  branch:
    - develop

steps:
  - name: only subgraph package
    image: bash
    commands:
      - cp -r packages/subgraph/. . && rm -rf packages

  - name: deploy
    image: node:18.19
    params:
      - START_BLOCK
    environment:
      GRAPHNODE_URL:
        from_secret: graphnode-url
      IPFS_URL:
        from_secret: ipfs-url
    commands:
      - export SUBGRAPH_NAME=bellecour/dev-dataprotector
      - echo "deploying commit $DRONE_COMMIT on subgraph $SUBGRAPH_NAME"
      - npm ci
      - npm run codegen
      - npm run build
      - npx graph create --node $GRAPHNODE_URL $SUBGRAPH_NAME
      - npx graph deploy --node $GRAPHNODE_URL $SUBGRAPH_NAME --ipfs $IPFS_URL --version-label $DRONE_COMMIT

---
kind: pipeline
type: docker
name: deploy-subgraph-production

trigger:
  event:
    - promote
  target:
    - subgraph-production
  branch:
    - main

steps:
  - name: only subgraph package
    image: bash
    commands:
      - cp -r packages/subgraph/. . && rm -rf packages

  - name: deploy
    image: node:18.19
    params:
      - START_BLOCK
    environment:
      GRAPHNODE_URL:
        from_secret: graphnode-url
      IPFS_URL:
        from_secret: ipfs-url
    commands:
      - export SUBGRAPH_NAME=bellecour/dataprotector
      - echo "deploying commit $DRONE_COMMIT on subgraph $SUBGRAPH_NAME"
      - npm ci
      - npm run codegen
      - npm run build
      - npx graph create --node $GRAPHNODE_URL $SUBGRAPH_NAME
      - npx graph deploy --node $GRAPHNODE_URL $SUBGRAPH_NAME --ipfs $IPFS_URL --version-label $(npm pkg get version)

###################### SHARING SMART CONTRACT DRONE CI ######################
---
kind: pipeline
type: docker
name: sharing-smart-contract-default

trigger:
  event: push

steps:
  - name: only sharing-smart-contract package
    image: bash
    commands:
      - cp -r packages/sharing-smart-contract/. . && rm -rf packages

  - name: install deps
    image: node:18.19
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: bellecour-fork-node
    image: node:18.19
    detach: true
    commands:
      - npx hardhat node

  - name: compile smart contracts
    image: node:18.19
    commands:
      - npm run compile

  - name: check format
    image: node:18.19
    commands:
      - npm run check-format

  - name: lint
    image: node:18.19
    commands:
      - npm run lint

  - name: storage diagrams
    image: node:18.19
    commands:
      - npm run storage-to-diagrams

  - name: UML class diagrams
    image: node:18.19
    commands:
      - npm run sol-to-uml

  - name: wait for bellecour-fork-node service
    image: node:18.19
    commands:
      - while ! curl -sSf http://bellecour-fork-node:8545; do sleep 5; done

  - name: tests
    image: node:18.19
    commands:
      - npm run test -- --network ci-bellecour-fork

---
# deploy smart contract in prod or dev
kind: pipeline
type: docker
name: deploy-sharing-smart-contract

trigger:
  event:
    - promote
  target:
    - smart-contract-dev
    - smart-contract-production
  branch:
    - v2
    - main

steps:
  - name: only sharing-smart-contract package
    image: bash
    commands:
      - cp -r packages/sharing-smart-contract/. . && rm -rf packages

  - name: install deps
    image: node:18.19
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: bellecour-fork-node
    image: node:18.19
    detach: true
    commands:
      - npx hardhat node

  - name: compile smart contracts
    image: node:18.19
    commands:
      - npm run compile

  - name: check format
    image: node:18.19
    commands:
      - npm run check-format

  - name: lint
    image: node:18.19
    commands:
      - npm run lint

  - name: storage diagrams
    image: node:18.19
    commands:
      - npm run storage-to-diagrams

  - name: UML class diagrams
    image: node:18.19
    commands:
      - npm run sol-to-uml

  - name: wait for bellecour-fork-node service
    image: node:18.19
    commands:
      - while ! curl -sSf http://bellecour-fork-node:8545; do sleep 5; done

  - name: tests
    image: node:18.19
    commands:
      - npm run test

  - name: smart-contract dev deployment
    image: node:18.19
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-dev-privatekey
    commands:
      - npm run deploy
    when:
      target:
        - smart-contract-dev
      branch:
        - v2

  - name: smart-contract prod deployment
    image: node:18.19
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-prod-privatekey
    commands:
      - npm run deploy
    when:
      target:
        - smart-contract-production
      branch:
        - main

  # - name: verify dev contract
  #   image: node:18.19
  #   commands:
  #     - timeout 30 npm run verify -- --network bellecour $(cat .smart-contract-address) || echo "verification may have failed, check at https://blockscout-bellecour.iex.ec/address/$(cat .smart-contract-address)/contracts#address-tabs"
  #   when:
  #     target:
  #       - smart-contract-dev
  #     branch:
  #       - develop

  # - name: verify prod contract
  #   image: node:18.19
  #   commands:
  #     - timeout 30 npm run verify -- --network bellecour $(cat .smart-contract-address) || echo "verification may have failed, check at https://blockscout-bellecour.iex.ec/address/$(cat .smart-contract-address)/contracts#address-tabs"
  #   when:
  #     target:
  #       - smart-contract-production
  #     branch:
  #       - main
