# ============================== Protected Data ==============================

type SchemaEntry @entity {
  id: String!
  path: String
  type: String
}

type ProtectedData @entity {
  id: Bytes!
  jsonSchema: String!
  schema: [SchemaEntry!]!
  owner: Account!
  name: String!
  collection: Collection
  isIncludedInSubscription: Boolean
  multiaddr: Bytes!
  checksum: Bytes!
  creationTimestamp: BigInt!
  transactionHash: Bytes!
  blockNumber: BigInt!
}

type Account @entity {
  id: ID!
  datasets: [ProtectedData!]! @derivedFrom(field: "owner")
  collections: [Collection!]! @derivedFrom(field: "owner")
  subscriptions: [CollectionSubscription!]! @derivedFrom(field: "subscriber")
}

type Collection @entity {
  id: ID!
  owner: Account!
  protectedDatas: [ProtectedData!]! @derivedFrom(field: "collection")
  subscriptions: [CollectionSubscription!]! @derivedFrom(field: "collection")
  subscriptionParams: SubscriptionParam
  creationTimestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type SubscriptionParam @entity {
  id: ID!
  duration: BigInt!
  price: BigInt!
}

# Cannot use 'Subscription' as it is a reserved word
type CollectionSubscription @entity {
  id: ID!
  collection: Collection!
  subscriber: Account!
  endDate: BigInt!
  creationTimestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type DealId @entity(immutable: true) {
  id: Bytes!
  creationTimestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}
