// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/_profile'
import { Route as IndexImport } from './routes/index'
import { Route as UserUserIdImport } from './routes/user.$userId'
import { Route as ProfileRentedContentImport } from './routes/_profile/rented-content'
import { Route as ProfileMySubscriptionsImport } from './routes/_profile/my-subscriptions'
import { Route as ProfileMyCollectionImport } from './routes/_profile/my-collection'
import { Route as ProfileMyContentIndexImport } from './routes/_profile/my-content/index'
import { Route as ProfileMyContentCreateNewImport } from './routes/_profile/my-content/create-new'
import { Route as ProfileMyContentContentIdImport } from './routes/_profile/my-content/$contentId'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/_profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserUserIdRoute = UserUserIdImport.update({
  path: '/user/$userId',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRentedContentRoute = ProfileRentedContentImport.update({
  path: '/rented-content',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileMySubscriptionsRoute = ProfileMySubscriptionsImport.update({
  path: '/my-subscriptions',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileMyCollectionRoute = ProfileMyCollectionImport.update({
  path: '/my-collection',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileMyContentIndexRoute = ProfileMyContentIndexImport.update({
  path: '/my-content/',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileMyContentCreateNewRoute = ProfileMyContentCreateNewImport.update({
  path: '/my-content/create-new',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileMyContentContentIdRoute = ProfileMyContentContentIdImport.update({
  path: '/my-content/$contentId',
  getParentRoute: () => ProfileRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_profile': {
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/_profile/my-collection': {
      preLoaderRoute: typeof ProfileMyCollectionImport
      parentRoute: typeof ProfileImport
    }
    '/_profile/my-subscriptions': {
      preLoaderRoute: typeof ProfileMySubscriptionsImport
      parentRoute: typeof ProfileImport
    }
    '/_profile/rented-content': {
      preLoaderRoute: typeof ProfileRentedContentImport
      parentRoute: typeof ProfileImport
    }
    '/user/$userId': {
      preLoaderRoute: typeof UserUserIdImport
      parentRoute: typeof rootRoute
    }
    '/_profile/my-content/$contentId': {
      preLoaderRoute: typeof ProfileMyContentContentIdImport
      parentRoute: typeof ProfileImport
    }
    '/_profile/my-content/create-new': {
      preLoaderRoute: typeof ProfileMyContentCreateNewImport
      parentRoute: typeof ProfileImport
    }
    '/_profile/my-content/': {
      preLoaderRoute: typeof ProfileMyContentIndexImport
      parentRoute: typeof ProfileImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ProfileRoute.addChildren([
    ProfileMyCollectionRoute,
    ProfileMySubscriptionsRoute,
    ProfileRentedContentRoute,
    ProfileMyContentContentIdRoute,
    ProfileMyContentCreateNewRoute,
    ProfileMyContentIndexRoute,
  ]),
  UserUserIdRoute,
])
